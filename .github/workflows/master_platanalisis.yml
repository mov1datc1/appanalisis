# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python and React app to Azure Web App - Platanalisis

on:
  push:
    branches:
      - master  # Asegúrate de que tu rama principal sea 'main' (o cámbiala a 'master' si es necesario)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'  # Asegúrate de que esta versión de Python coincide con tu configuración en Azure

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel
          pip install -r backend/requirements.txt  # Asegúrate de que esta ruta sea correcta según tu proyecto

      - name: Build React frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..
          cp -r frontend/build/* backend/static/  # Copia los archivos de React al directorio de estáticos de Flask

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      # Puedes agregar un paso aquí para ejecutar tests, si tienes alguno.

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/  # Excluir el entorno virtual de los archivos de despliegue

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Esto es necesario para solicitar el JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Platanalisis'  # Nombre del App Service en Azure
          package: .  # Asegúrate de que el contenido descomprimido es el que se despliega
